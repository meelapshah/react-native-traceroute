{"version":3,"sources":["index.tsx"],"names":["TracerouteUpdateEvent","TracerouteModule","NativeModules","TracerouteEventEmitter","NativeEventEmitter","undefined","tracerouteInProgress","Traceroute","address","probeType","onUpdate","Error","console","error","listener","evt","done","removeListener","addListener","doTraceroute"],"mappings":";;;;;;;;AAAA;;AAOA,MAAMA,qBAAqB,GAAG,uBAA9B;AAEA,MAAMC,gBAAgB,GAAGC,2BAAcD,gBAAvC;AAEA,MAAME,sBAAsB,GAAGF,gBAAgB,GAC3C,IAAIG,+BAAJ,CAAuBH,gBAAvB,CAD2C,GAE3CI,SAFJ;AAIA,IAAIC,oBAA6B,GAAG,KAApC;;AAEO,eAAeC,UAAf,CACLC,OADK,EAELC,SAFK,EAGLC,QAHK,EAIU;AACf,MAAI,CAACT,gBAAL,EAAuB;AACrB,UAAM,IAAIU,KAAJ,CAAU,uBAAV,CAAN;AACD;;AACD,MAAIL,oBAAJ,EAA0B;AACxBM,IAAAA,OAAO,CAACC,KAAR,CAAc,wBAAd;AACA,UAAM,IAAIF,KAAJ,CAAU,yBAAV,CAAN;AACD;;AACDL,EAAAA,oBAAoB,GAAG,IAAvB;;AACA,QAAMQ,QAAQ,GAAIC,GAAD,IAA2B;AAC1CL,IAAAA,QAAQ,CAACK,GAAD,CAAR;;AACA,QAAIA,GAAG,CAACC,IAAR,EAAc;AACZV,MAAAA,oBAAoB,GAAG,KAAvB;AACAH,MAAAA,sBAAsB,CAACc,cAAvB,CAAsCjB,qBAAtC,EAA6Dc,QAA7D;AACD;AACF,GAND;;AAOAX,EAAAA,sBAAsB,CAACe,WAAvB,CAAmClB,qBAAnC,EAA0Dc,QAA1D;AACA,QAAMb,gBAAgB,CAACkB,YAAjB,CAA8BX,OAA9B,EAAuCC,SAAvC,CAAN;AACD;;eAEcF,U","sourcesContent":["import { NativeEventEmitter, NativeModules } from 'react-native';\n\nexport interface TracerouteResult {\n  output: string;\n  done: boolean;\n}\n\nconst TracerouteUpdateEvent = \"tracerouteUpdateEvent\";\n\nconst TracerouteModule = NativeModules.TracerouteModule;\n\nconst TracerouteEventEmitter = TracerouteModule\n  ? new NativeEventEmitter(TracerouteModule)\n  : undefined;\n\nlet tracerouteInProgress: boolean = false;\n\nexport async function Traceroute(\n  address: string,\n  probeType: \"udp\" | \"icmp\",\n  onUpdate: (result: TracerouteResult) => void\n): Promise<void> {\n  if (!TracerouteModule) {\n    throw new Error(\"No traceroute module.\");\n  }\n  if (tracerouteInProgress) {\n    console.error(\"rejecting, in progress\");\n    throw new Error(\"Traceroute in progress.\");\n  }\n  tracerouteInProgress = true;\n  const listener = (evt: TracerouteResult) => {\n    onUpdate(evt);\n    if (evt.done) {\n      tracerouteInProgress = false;\n      TracerouteEventEmitter.removeListener(TracerouteUpdateEvent, listener);\n    }\n  };\n  TracerouteEventEmitter.addListener(TracerouteUpdateEvent, listener);\n  await TracerouteModule.doTraceroute(address, probeType)\n}\n\nexport default Traceroute;\n"]}
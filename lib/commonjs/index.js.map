{"version":3,"sources":["index.tsx"],"names":["TracerouteEventEmitter","NativeEventEmitter","NativeModules","TracerouteModule","Traceroute","cliArgs","onUpdate","id","onEvent","evt","exitcode","undefined","removeListener","doTraceroute","then","eventId","addListener"],"mappings":";;;;;;;;AAAA;;AAQA,MAAMA,sBAAsB,GAAG,IAAIC,+BAAJ,CAAuBC,2BAAcC,gBAArC,CAA/B;;AAEO,SAASC,UAAT,CACLC,OADK,EAELC,QAFK,EAGL;AACA,MAAIC,EAAJ;;AACA,QAAMC,OAAO,GAAIC,GAAD,IAA2B;AACzCH,IAAAA,QAAQ,CAACG,GAAD,CAAR;;AACA,QAAIA,GAAG,CAACC,QAAJ,KAAiBC,SAAjB,IAA8BJ,EAAlC,EAAsC;AACpCP,MAAAA,sBAAsB,CAACY,cAAvB,CAAsCL,EAAtC,EAA0CC,OAA1C;AACD;AACF,GALD;;AAMAN,6BAAcE,UAAd,CAAyBS,YAAzB,CAAsCR,OAAtC,EAA+CS,IAA/C,CAAqDC,OAAD,IAAqB;AACvER,IAAAA,EAAE,GAAGQ,OAAL;AACAf,IAAAA,sBAAsB,CAACgB,WAAvB,CAAmCT,EAAnC,EAAuCC,OAAvC;AACD,GAHD;AAID;;eAEcJ,U","sourcesContent":["import { NativeEventEmitter, NativeModules } from 'react-native';\n\nexport interface TracerouteResult {\n  stdout: string;\n  stderr: string;\n  exitcode?: number;\n}\n\nconst TracerouteEventEmitter = new NativeEventEmitter(NativeModules.TracerouteModule);\n\nexport function Traceroute(\n  cliArgs: string[],\n  onUpdate: (result: TracerouteResult) => void\n) {\n  let id: string | undefined;\n  const onEvent = (evt: TracerouteResult) => {\n    onUpdate(evt);\n    if (evt.exitcode !== undefined && id) {\n      TracerouteEventEmitter.removeListener(id, onEvent);\n    }\n  };\n  NativeModules.Traceroute.doTraceroute(cliArgs).then((eventId: string) => {\n    id = eventId;\n    TracerouteEventEmitter.addListener(id, onEvent);\n  });\n}\n\nexport default Traceroute;\n"]}
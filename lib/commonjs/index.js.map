{"version":3,"sources":["index.tsx"],"names":["TracerouteEventEmitter","NativeEventEmitter","NativeModules","Traceroute","address","probeType","onUpdate","doTraceroute","then","id","listener","evt","exitcode","undefined","removeListener","addListener"],"mappings":";;;;;;;;AAAA;;AAQA,MAAMA,sBAAsB,GAAG,IAAIC,+BAAJ,CAAuBC,2BAAcC,UAArC,CAA/B;;AAEO,SAASA,UAAT,CACLC,OADK,EAELC,SAFK,EAGLC,QAHK,EAIL;AACAJ,6BAAcC,UAAd,CAAyBI,YAAzB,CAAsCH,OAAtC,EAA+CC,SAA/C,EAA0DG,IAA1D,CAAgEC,EAAD,IAAgB;AAC7E,UAAMC,QAAQ,GAAIC,GAAD,IAA2B;AAC1CL,MAAAA,QAAQ,CAACK,GAAD,CAAR;;AACA,UAAIA,GAAG,CAACC,QAAJ,KAAiBC,SAArB,EAAgC;AAC9Bb,QAAAA,sBAAsB,CAACc,cAAvB,CAAsCL,EAAtC,EAA0CC,QAA1C;AACD;AACF,KALD;;AAMAV,IAAAA,sBAAsB,CAACe,WAAvB,CAAmCN,EAAnC,EAAuCC,QAAvC;AACD,GARD;AASD;;eAEcP,U","sourcesContent":["import { NativeEventEmitter, NativeModules } from 'react-native';\n\nexport interface TracerouteResult {\n  stdout: string;\n  stderr: string;\n  exitcode?: number;\n}\n\nconst TracerouteEventEmitter = new NativeEventEmitter(NativeModules.Traceroute);\n\nexport function Traceroute(\n  address: string,\n  probeType: \"udp\" | \"icmp\",\n  onUpdate: (result: TracerouteResult) => void\n) {\n  NativeModules.Traceroute.doTraceroute(address, probeType).then((id: string) => {\n    const listener = (evt: TracerouteResult) => {\n      onUpdate(evt);\n      if (evt.exitcode !== undefined) {\n        TracerouteEventEmitter.removeListener(id, listener);\n      }\n    };\n    TracerouteEventEmitter.addListener(id, listener);\n  });\n}\n\nexport default Traceroute;\n"]}
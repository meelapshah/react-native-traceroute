{"version":3,"sources":["index.tsx"],"names":["NativeEventEmitter","NativeModules","TracerouteEventEmitter","Traceroute","cliArgs","onUpdate","doTraceroute","then","id","listener","evt","exitcode","undefined","removeListener","addListener"],"mappings":"AAAA,SAASA,kBAAT,EAA6BC,aAA7B,QAAkD,cAAlD;AAQA,MAAMC,sBAAsB,GAAG,IAAIF,kBAAJ,CAAuBC,aAAa,CAACE,UAArC,CAA/B;AAEA,OAAO,SAASA,UAAT,CACLC,OADK,EAELC,QAFK,EAGL;AACAJ,EAAAA,aAAa,CAACE,UAAd,CAAyBG,YAAzB,CAAsCF,OAAtC,EAA+CG,IAA/C,CAAqDC,EAAD,IAAgB;AAClE,UAAMC,QAAQ,GAAIC,GAAD,IAA2B;AAC1CL,MAAAA,QAAQ,CAACK,GAAD,CAAR;;AACA,UAAIA,GAAG,CAACC,QAAJ,KAAiBC,SAArB,EAAgC;AAC9BV,QAAAA,sBAAsB,CAACW,cAAvB,CAAsCL,EAAtC,EAA0CC,QAA1C;AACD;AACF,KALD;;AAMAP,IAAAA,sBAAsB,CAACY,WAAvB,CAAmCN,EAAnC,EAAuCC,QAAvC;AACD,GARD;AASD;AAED,eAAeN,UAAf","sourcesContent":["import { NativeEventEmitter, NativeModules } from 'react-native';\n\nexport interface TracerouteResult {\n  stdout: string;\n  stderr: string;\n  exitcode?: number;\n}\n\nconst TracerouteEventEmitter = new NativeEventEmitter(NativeModules.Traceroute);\n\nexport function Traceroute(\n  cliArgs: string[],\n  onUpdate: (result: TracerouteResult) => void\n) {\n  NativeModules.Traceroute.doTraceroute(cliArgs).then((id: string) => {\n    const listener = (evt: TracerouteResult) => {\n      onUpdate(evt);\n      if (evt.exitcode !== undefined) {\n        TracerouteEventEmitter.removeListener(id, listener);\n      }\n    };\n    TracerouteEventEmitter.addListener(id, listener);\n  });\n}\n\nexport default Traceroute;\n"]}